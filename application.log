[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter12348811879540407222.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire13455438900086557005tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_05643512099537378506tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter12348811879540407222.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 0c17a87c-ac83-4c6f-8895-ff917df32588 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$qY7KvMAIFBEBCsvfsAYkp.NdU2.qUF00gyAhUCMi1jeGr.bhpKPJW, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6e5b3642
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=0c17a87c-ac83-4c6f-8895-ff917df32588
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@35466463] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter2255579885592321012.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire20660103498016957tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_07099530488091803974tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter2255579885592321012.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: e4375120-4626-4138-90b5-3161a112f823 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$oOWM3FMFS4PDP2MjKMlo7uOlsLXQRniOUfFiIkTXU0Tj3s2q0eXki, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6e5b3642
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=e4375120-4626-4138-90b5-3161a112f823
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@33601235] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter17232840748317412180.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire10741401548580598461tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_018417203105838552962tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter17232840748317412180.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 3fab9dab-1313-4c50-9d4e-55bc709aa26c (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$XUCW7pmJwqSBnYT2/KJEBO1/8rhTisg9s7GE8OSGHq8fJ/8JE8Eue, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@675bf541
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=3fab9dab-1313-4c50-9d4e-55bc709aa26c
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71711fad] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter8748226613546660511.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire3767499968425465460tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_014658629204821694385tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter8748226613546660511.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 794ffca7-6749-448d-9cea-ff86191d5556 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$GvOyTNGwWcoujxFhsL771Oq7DGTCt3RzQSstHcgivR758U0x65Z8O, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@675bf541
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=794ffca7-6749-448d-9cea-ff86191d5556
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f04c566] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter9902575167473431410.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire1518882081885070123tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_014187331741851612273tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter9902575167473431410.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 22fd341c-b77a-4a04-8644-856b12a87cd2 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$b6fSUQP0DXdw/zBWcZQ7pu2CIB6MbasYZo9LTfKLFl4E4ka/6v0Ce, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@675bf541
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=22fd341c-b77a-4a04-8644-856b12a87cd2
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@51f02cce] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter4412224443095716315.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire7765402251482705476tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_06255592473356658561tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter4412224443095716315.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 1b3365b5-b841-4384-820a-f38325be1bba (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$DSuR/qJyiQzBmU6OSTR2/e3.FA2oP9zf88ovCSz9DsUd0GhfapjLC, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@675bf541
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=1b3365b5-b841-4384-820a-f38325be1bba
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@38c0045f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71978f46
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c9320c2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7915bca3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a67b4ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6917bb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bc49bc5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36a6bea6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@65c33b92
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a48602
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@711d1a52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26844abb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@21079a12
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@30e9ca13
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e0895f5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ee5b2d9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@290d10ef
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4110765e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@8851ce1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14b789f6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1dba4e06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@587a1cfb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5c77ba8f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@261ea657
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5d43409a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@558756be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2643d762
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@767a014e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63c12e52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60bbacfc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3c5dbdf8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5ac102
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3804a9a8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a6e998
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4b6e1c0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15400fff
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@455c1d8c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a92be4f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4da6d664
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7fe82967
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522bf64e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44536de4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@712cfb63
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4faa298
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b52b755
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@10f7c76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dc4a691
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b1dc20f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4613311f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ec8f4b9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@bc042d5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5484117b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37df14d1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7efb53af
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1665fa54]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@4b97b3d2, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter104750708319609006.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire1441746691539404541tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_05302247649477524628tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter104750708319609006.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@383cb5ce, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@425d5d46, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@250a9031] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b3a6e95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a6dc5ea]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c90a05]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a3643e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55071497]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10d98940]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae49387]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34cf0e80]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ef1a0a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56f9de3b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6728370a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5f8e61]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73b0ed03]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55061418]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27db45f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec3d8e4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aeff8ca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@101c15ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6068ebb2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a466dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ed9d173]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e981e78]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fbe4800]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f3c5ecd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1179fc8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a03529c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1760e594]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b32465]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70c56434]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b9b97ad]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c6bd624]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8d52be]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@645ba24a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@536da29c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fbcb71]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65af05b2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d537616]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12f8682a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a20da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5613247e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9e50283]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5368e981]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c90029b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db728df]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2096c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a89414e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fb8301]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7cdfa824]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18db3b3c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ddf42dd]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c1c9881]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65d7eea4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d37aa0f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1224e1b6]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72a3462f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56b05bd7]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e4afd10]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36871e98
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 0b1f2e75-18c6-42d6-ab67-17ccd1b8ff7c (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$DFKUJi2pmYFAQ3Ah6ey5H..VETQILCqATZdhqSsILa9G5hcJz0OtS, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@1c58d7be
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@675bf541
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=0b1f2e75-18c6-42d6-ab67-17ccd1b8ff7c
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@71cad21a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@9a9aa68]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124ac145
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4af70944
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c777e7b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59f93db8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@122d6c22
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a4dcc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e74a380
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@6e0c6a7a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@54d8c20d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4d95a72e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@151bf776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ecec90d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@118ffcfd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1305c126
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72f9f27c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c1bdcc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762637be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b97c4ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7640a5b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642f9a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23f3da8b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@322ba549]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b950f82, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter1406187891527495294.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire2301297481722707485tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_015018800768234248877tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter1406187891527495294.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d352de0, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6de30571, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5597ca3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec2ca]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac756b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b65084e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cae2a97]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d12429]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6873f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52285a5f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa5cc73]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224e6e88]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f9dc7e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e5246]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503556cb]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e19de]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12aa381f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bec1589]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f0bfc3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14590fe2]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5922cff3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3f43d1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d4cf2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10d055]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d801d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9a1205]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de85972]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280ecc33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa541]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aab7195]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6210666c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dca62c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3995f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2211b44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c830ebd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11ad095c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dc782d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401926df]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff8a3ad]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bdfa0b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4714ef]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffa7041]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c3f55]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22aefae0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20faaf77]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48d44b46]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa0dbca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794cb26b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ee56c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21abda60]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd20ebc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a73867]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749d7c01]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f7cd50e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401ec794]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e1d8d41]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4809c771]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277bc3a5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214fba74]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a72e2e8
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 29e1a78a-a221-44cd-a9b4-b577210cda68 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$eo3KaGyBiPOrLqM25r/2euAcKn9.vhARD0RkyxuUTzX2n2cib25e6, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@7f030c72
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@eabecf5
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=29e1a78a-a221-44cd-a9b4-b577210cda68
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77956e17] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124ac145
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4af70944
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c777e7b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59f93db8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@122d6c22
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a4dcc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e74a380
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@6e0c6a7a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@54d8c20d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4d95a72e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@151bf776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ecec90d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@118ffcfd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1305c126
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72f9f27c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c1bdcc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762637be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b97c4ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7640a5b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642f9a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23f3da8b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@322ba549]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b950f82, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter16824017459826234970.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire6696234848953162491tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_016976411711544553056tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter16824017459826234970.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d352de0, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6de30571, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5597ca3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec2ca]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac756b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b65084e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cae2a97]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d12429]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6873f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52285a5f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa5cc73]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224e6e88]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f9dc7e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e5246]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503556cb]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e19de]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12aa381f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bec1589]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f0bfc3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14590fe2]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5922cff3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3f43d1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d4cf2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10d055]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d801d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9a1205]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de85972]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280ecc33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa541]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aab7195]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6210666c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dca62c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3995f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2211b44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c830ebd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11ad095c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dc782d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401926df]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff8a3ad]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bdfa0b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4714ef]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffa7041]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c3f55]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22aefae0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20faaf77]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48d44b46]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa0dbca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794cb26b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ee56c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21abda60]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd20ebc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a73867]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749d7c01]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f7cd50e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401ec794]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e1d8d41]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4809c771]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277bc3a5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214fba74]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a72e2e8
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 42283105-a0dc-45df-9f9b-f73a435eda6b (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$Vojp8i2RM8S0h5UaD6gfSOns/CPSL4H0RHtrBRZnRxCyTXA4Vo0ei, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@7f030c72
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@eabecf5
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=42283105-a0dc-45df-9f9b-f73a435eda6b
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@46d15b69] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124ac145
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4af70944
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c777e7b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59f93db8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@122d6c22
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a4dcc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e74a380
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@6e0c6a7a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@54d8c20d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4d95a72e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@151bf776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ecec90d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@118ffcfd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1305c126
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72f9f27c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c1bdcc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762637be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b97c4ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7640a5b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642f9a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23f3da8b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@322ba549]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b950f82, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter4794298995560666244.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire3183746570693760960tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_030829017434711405tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter4794298995560666244.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d352de0, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6de30571, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5597ca3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec2ca]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac756b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b65084e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cae2a97]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d12429]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6873f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52285a5f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa5cc73]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224e6e88]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f9dc7e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e5246]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503556cb]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e19de]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12aa381f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bec1589]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f0bfc3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14590fe2]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5922cff3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3f43d1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d4cf2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10d055]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d801d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9a1205]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de85972]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280ecc33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa541]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aab7195]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6210666c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dca62c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3995f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2211b44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c830ebd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11ad095c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dc782d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401926df]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff8a3ad]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bdfa0b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4714ef]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffa7041]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c3f55]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22aefae0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20faaf77]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48d44b46]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa0dbca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794cb26b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ee56c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21abda60]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd20ebc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a73867]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749d7c01]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f7cd50e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401ec794]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e1d8d41]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4809c771]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277bc3a5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214fba74]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a72e2e8
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 046e74f2-b66b-468b-8b51-ee9211f5e878 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$tWEzKiPFxq.relvPKetBz.7qexAqFwnmFX.ulGRqASFo.AcQlEdsG, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@7f030c72
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@eabecf5
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=046e74f2-b66b-468b-8b51-ee9211f5e878
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@b40f9ae] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124ac145
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4af70944
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c777e7b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59f93db8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@122d6c22
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a4dcc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e74a380
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@6e0c6a7a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@54d8c20d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4d95a72e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@151bf776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ecec90d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@118ffcfd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1305c126
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72f9f27c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c1bdcc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762637be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b97c4ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7640a5b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642f9a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23f3da8b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@322ba549]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b950f82, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter14512542842626409303.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire17551832887393992870tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_014800281121564254282tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter14512542842626409303.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d352de0, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6de30571, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5597ca3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec2ca]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac756b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b65084e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cae2a97]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d12429]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6873f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52285a5f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa5cc73]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224e6e88]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f9dc7e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e5246]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503556cb]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e19de]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12aa381f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bec1589]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f0bfc3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14590fe2]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5922cff3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3f43d1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d4cf2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10d055]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d801d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9a1205]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de85972]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280ecc33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa541]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aab7195]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6210666c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dca62c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3995f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2211b44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c830ebd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11ad095c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dc782d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401926df]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff8a3ad]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bdfa0b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4714ef]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffa7041]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c3f55]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22aefae0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20faaf77]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48d44b46]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa0dbca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794cb26b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ee56c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21abda60]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd20ebc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a73867]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749d7c01]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f7cd50e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401ec794]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e1d8d41]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4809c771]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277bc3a5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214fba74]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a72e2e8
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 242be9cb-881b-475c-a7cc-7f0e1954ced7 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$KxWRDU/MlLwNVNX6K84g5e..Wk4QC.aRhTlEzjEKZffK4zd6a4.BW, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@7f030c72
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@eabecf5
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=242be9cb-881b-475c-a7cc-7f0e1954ced7
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@31aa39c4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate ORM core version 5.4.12.Final
[main] DEBUG org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using internal StandardServiceRegistryBuilder
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cfg.Configuration  - Building session factory using provided StandardServiceRegistry
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a04fea7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124ac145
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@188cbcde
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@4af70944
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7661b5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f0b3cfe
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b2f5fcf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7718a40f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6c008c24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@472a11ae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ac4ccad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4b6d92e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@13d9261f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d93198
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c777e7b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59f93db8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@292158f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e7f0216
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@146dcfe6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4a734c04
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ac86d6a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23b8d9f3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2127e66e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@60f70249
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@43045f9f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75ae4a1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65b97f47
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7aac8884
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@122d6c22
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e33d73e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a4dcc6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7e74a380
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cb7fa71
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d910b3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2f1d0bbc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59dc36d4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ee0b4f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@77bbadc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@a451491
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53e800f9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@524a076e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@6e0c6a7a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@50850539
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c3edf4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@54d8c20d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4d95a72e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@15639440
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@151bf776
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@599e4d41
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12e0f1cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ecec90d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@118ffcfd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6540cf1d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@378cfecf
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1305c126
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@72f9f27c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c1bdcc2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762637be
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b97c4ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7640a5b1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@642f9a77
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23f3da8b
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 4.1
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[main] DEBUG org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder  - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@322ba549]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Fan
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Fan on table fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=card_number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property card_number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:card_number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property card_number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Fan:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(fans), mappingColumn=teams_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='teams_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property teams
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Player
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Player on table players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='players'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=fullname, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property fullname with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:fullname]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fullname
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=number, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property number with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:number]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property number
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property position with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Player:position]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property position
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property team
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Team
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain.Team on table teams
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=fans_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='fans_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='teams'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property fans
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=funds, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property funds with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:funds]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property funds
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property owner with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:owner]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property owner
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property players
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=tot_employeer, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property tot_employeer with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain.Team:tot_employeer]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property tot_employeer
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _Role
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._Role on table roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=name, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property name with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._Role:name]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property name
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(roles), mappingColumn=users_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='users_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='roles'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property users
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name _User
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity it.jdk.hibernatespringthymelearfteam.domain._User on table users
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=false, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property id with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:id]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property id
[main] DEBUG org.hibernate.cfg.BinderHelper  - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=version, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property version with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:version]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property version
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property firstName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:firstName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property firstName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property lastName with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:lastName]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property lastName
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property password with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:password]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property password
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property roles
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property username with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [it.jdk.hibernatespringthymelearfteam.domain._User:username]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for username
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property username
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for card_number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for fullname
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for number
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for position
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for funds
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for owner
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for tot_employeer
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for name
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for id
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for version
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for firstName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for lastName
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for password
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for username
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [fans]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [roles]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: users_id, element: roles_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [teams_id] to be non-null as it is part of the primary key for table [fans_teams]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: teams_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [fans_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [players_id] to be non-null as it is part of the primary key for table [fans_players]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: fans_id, element: players_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: players_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: teams_id, element: fans_id
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: it.jdk.hibernatespringthymelearfteam.domain.Team.players through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players -> players
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain.Player.team
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: team_id, one-to-many: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding as ManyToMany: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: roles_id, element: users_id
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: null
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - query : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - closed-handling : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - lists : disabled
[main] DEBUG org.hibernate.cfg.Settings  - JPA compliance - transactions : disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@b950f82, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=IT, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.6\bin, sun.java.command=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter5797068940004738058.jar C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire702676007199695171tmp C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefire_010377434670313267352tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\test-classes;C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\classes;C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.2.0.RELEASE\spring-beans-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.2.0.RELEASE\spring-core-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.2.0.RELEASE\spring-jcl-5.2.0.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0\jackson-databind-2.10.0.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0\jackson-annotations-2.10.0.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\8.0\javaee-web-api-8.0.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.2.4.RELEASE\spring-context-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.2.4.RELEASE\spring-aop-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.2.4.RELEASE\spring-expression-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.2.4.RELEASE\spring-web-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.2.4.RELEASE\spring-webmvc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-orm\5.2.4.RELEASE\spring-orm-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-jdbc\5.2.4.RELEASE\spring-jdbc-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-tx\5.2.4.RELEASE\spring-tx-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.12.Final\hibernate-core-5.4.12.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.10.7\byte-buddy-1.10.7.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.11.RELEASE\thymeleaf-spring5-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\thymeleaf\3.0.11.RELEASE\thymeleaf-3.0.11.RELEASE.jar;C:\Users\Alex\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Alex\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Alex\.m2\repository\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-layout-dialect\2.4.1\thymeleaf-layout-dialect-2.4.1.jar;C:\Users\Alex\.m2\repository\nz\net\ultraq\thymeleaf\thymeleaf-expression-processor\1.1.3\thymeleaf-expression-processor-1.1.3.jar;C:\Users\Alex\.m2\repository\org\codehaus\groovy\groovy\2.4.13\groovy-2.4.13.jar;C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Alex\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.2.Final\hibernate-validator-6.1.2.Final.jar;C:\Users\Alex\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-core\5.3.1.RELEASE\spring-security-core-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-web\5.3.1.RELEASE\spring-security-web-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\org\springframework\security\spring-security-config\5.3.1.RELEASE\spring-security-config-5.3.1.RELEASE.jar;C:\Users\Alex\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0.rc1\jackson-core-2.11.0.rc1.jar;C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\web\el-impl\2.2\el-impl-2.2.jar;C:\Users\Alex\.m2\repository\javax\el\el-api\2.2\el-api-2.2.jar;C:\Users\Alex\.m2\repository\org\springframework\spring-test\5.2.4.RELEASE\spring-test-5.2.4.RELEASE.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\Alex\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-springsecurity5\3.0.4.RELEASE\thymeleaf-extras-springsecurity5-3.0.4.RELEASE.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, user.language=it, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=C:\Program Files\Java\jdk-11.0.6, file.separator=\, basedir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam\target\surefire\surefirebooter5797068940004738058.jar, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.6+8-LTS, user.name=Alex, path.separator=;, os.version=10.0, hibernate.enable_lazy_load_no_trans=true, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[jdk.internal.loader.ClassLoaders$AppClassLoader@2cdf8d8a], java.vendor.version=18.9, hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, maven.ext.class.path=C:\Program Files\NetBeans-11.3\netbeans\java\maven-nblib\netbeans-eventspy.jar, localRepository=C:\Users\Alex\.m2\repository, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.6, user.dir=C:\Users\Alex\Documents\NetBeansProjects\HibernateSpringThymelearfTeam, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d352de0, java.library.path=C:\Program Files\Java\jdk-11.0.6\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python27\;C:\Python27\Scripts;D:\Python\Scripts\;D:\Python\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\MatLab\runtime\win64;D:\MatLab\bin;D:\MatLab\polyspace\bin;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\Python\Lib\site-packages;D:\python\lib\site-packages;D:\python\lib\site-packages\anaconda-0.0.1.1-py3.8.egg-info;C:\Users\Alex\Anaconda3;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2019.2.4\bin;;C:\Users\Alex\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files (x86)\Nmap;C:\Program Files\JetBrains\PyCharm Community\bin;;C:\Users\Alex\AppData\Roaming\npm;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.6+8-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@6de30571, java.class.version=55.0}
[main] INFO  org.hibernate.validator.internal.util.Version  - HV000001: Hibernate Validator 6.1.2.Final
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1163a27] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._Role] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Team] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Fan] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain.Player] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [it.jdk.hibernatespringthymelearfteam.domain._User] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (fans_id, players_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set players_id=? where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where fans_id=? and players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Player.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_players (players_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_players set fans_id=? where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_players where players_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_players where players_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.fans
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (teams_id, fans_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set fans_id=? where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where teams_id=? and fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._Role.users
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (roles_id, users_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set users_id=? where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where roles_id=? and users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain._User.roles
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update users_roles set roles_id=? where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from users_roles where users_id=? and roles_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from users_roles where users_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Fan.teams
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: insert into fans_teams (fans_id, teams_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update fans_teams set teams_id=? where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: delete from fans_teams where fans_id=? and teams_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: delete from fans_teams where fans_id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update players set team_id=? where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update players set  where id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update players set team_id=null where team_id=? and id=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update players set team_id=null where team_id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._Role
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from roles where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select role_.id, role_.version as version2_4_, role_.name as name3_4_ from roles role_ where role_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update roles set version=?, name=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from roles where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5597ca3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@531ec2ca]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac756b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [NONE]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b65084e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@cae2a97]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d12429]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._Role.users.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._Role [READ]: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._Role: select role0_.id as id1_4_0_, role0_.version as version2_4_0_, role0_.name as name3_4_0_ from roles role0_ where role0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from teams where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select team_.id, team_.version as version2_5_, team_.funds as funds3_5_, team_.name as name4_5_, team_.owner as owner5_5_, team_.tot_employeer as tot_empl6_5_ from teams team_ where team_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update teams set version=?, funds=?, name=?, owner=?, tot_employeer=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from teams where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@143413cd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@146f3d22]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66b6873f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52285a5f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fa5cc73]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [NONE]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@224e6e88]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60f9dc7e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15e5246]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@503556cb]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9e19de]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.fans.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Team [READ]: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Team: select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from fans where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select fan_.id, fan_.version as version2_0_, fan_.card_number as card_num3_0_, fan_.fullname as fullname4_0_ from fans fan_ where fan_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into fans (version, card_number, fullname, id) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update fans set version=?, card_number=?, fullname=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from fans where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12aa381f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1bec1589]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f0bfc3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14590fe2]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5922cff3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [NONE]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2299d903]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c3f43d1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632d4cf2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f10d055]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@542ff147]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.players.<elements>)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
          - SQL table alias mapping - fan0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Fan [READ]: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Fan: select fan0_.id as id1_0_0_, fan0_.version as version2_0_0_, fan0_.card_number as card_num3_0_0_, fan0_.fullname as fullname4_0_0_ from fans fan0_ where fan0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from players where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select player_.id, player_.version as version2_3_, player_.fullname as fullname3_3_, player_.number as number4_3_, player_.position as position5_3_, player_.team_id as team_id6_3_ from players player_ where player_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update players set version=?, fullname=?, number=?, position=?, team_id=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from players where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d801d8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2807cf3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@298e002d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9a1205]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1de85972]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@280ecc33]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [NONE]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa541]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4aab7195]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6210666c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dca62c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@43d3995f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2211b44f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.fans.<elements>)
          - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:4>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:5>, path=it.jdk.hibernatespringthymelearfteam.domain.Player.team.fans.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(team)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain.Player [READ]: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from players player0_ left outer join teams team1_ on player0_.team_id=team1_.id where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain.Player: select player0_.id as id1_3_0_, player0_.version as version2_3_0_, player0_.fullname as fullname3_3_0_, player0_.number as number4_3_0_, player0_.position as position5_3_0_, player0_.team_id as team_id6_3_0_ from players player0_ where player0_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: it.jdk.hibernatespringthymelearfteam.domain._User
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select version from users where id =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select user_.id, user_.version as version2_6_, user_.firstName as firstnam3_6_, user_.lastName as lastname4_6_, user_.password as password5_6_, user_.username as username6_6_ from users user_ where user_.id=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update users set version=?, firstName=?, lastName=?, password=?, username=? where id=? and version=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from users where id=? and version=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c830ebd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@11ad095c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c2a903f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [NONE]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9dc782d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@401926df]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff8a3ad]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles.users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=it.jdk.hibernatespringthymelearfteam.domain._User)
    - Returns
       - EntityReturnImpl(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:0>, path=it.jdk.hibernatespringthymelearfteam.domain._User)
          - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:1>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:2>, path=it.jdk.hibernatespringthymelearfteam.domain._User.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_6_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {users_id1_7_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_4_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                      - SQL table alias mapping - role2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_4_2_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity it.jdk.hibernatespringthymelearfteam.domain._User [READ]: select user0_.id as id1_6_0_, user0_.version as version2_6_0_, user0_.firstName as firstnam3_6_0_, user0_.lastName as lastname4_6_0_, user0_.password as password5_6_0_, user0_.username as username6_6_0_, roles1_.users_id as users_id1_7_1_, role2_.id as roles_id2_7_1_, role2_.id as id1_4_2_, role2_.version as version2_4_2_, role2_.name as name3_4_2_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity it.jdk.hibernatespringthymelearfteam.domain._User: select user0_.id as id1_6_1_, user0_.version as version2_6_1_, user0_.firstName as firstnam3_6_1_, user0_.lastName as lastname4_6_1_, user0_.password as password5_6_1_, user0_.username as username6_6_1_, roles1_.users_id as users_id1_7_3_, role2_.id as roles_id2_7_3_, role2_.id as id1_4_0_, role2_.version as version2_4_0_, role2_.name as name3_4_0_ from users user0_ left outer join users_roles roles1_ on user0_.id=roles1_.users_id left outer join roles role2_ on roles1_.roles_id=role2_.id where user0_.id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@74bdfa0b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68a5aadd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f8db6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c4714ef]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c94bd18]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team.players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team.tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>)
             - EntityAttributeFetchImpl(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team)
                - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:4>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.players].<elements>.team.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - player1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(team)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_5_2_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.players: select players0_.fans_id as fans_id1_1_0_, players0_.players_id as players_2_1_0_, player1_.id as id1_3_1_, player1_.version as version2_3_1_, player1_.fullname as fullname3_3_1_, player1_.number as number4_3_1_, player1_.position as position5_3_1_, player1_.team_id as team_id6_3_1_, team2_.id as id1_5_2_, team2_.version as version2_5_2_, team2_.funds as funds3_5_2_, team2_.name as name4_5_2_, team2_.owner as owner5_5_2_, team2_.tot_employeer as tot_empl6_5_2_ from fans_players players0_ inner join players player1_ on players0_.players_id=player1_.id left outer join teams team2_ on player1_.team_id=team2_.id where players0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ffa7041]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@632c3f55]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : players
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@22aefae0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20faaf77]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Player.fans].<elements>.teams.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {players_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Player.fans: select fans0_.players_id as players_2_1_0_, fans0_.fans_id as fans_id1_1_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_players fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.players_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7440265c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d8be7b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : card_number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48d44b46]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa0dbca]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : teams
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : teams
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.fans].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.fans)
          - SQL table alias mapping - fans0_
          - alias suffix - 0_
          - suffixed key columns - {teams_id2_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Fan)
                - SQL table alias mapping - fan1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.fans: select fans0_.teams_id as teams_id2_2_0_, fans0_.fans_id as fans_id1_2_0_, fan1_.id as id1_0_1_, fan1_.version as version2_0_1_, fan1_.card_number as card_num3_0_1_, fan1_.fullname as fullname4_0_1_ from fans_teams fans0_ inner join fans fan1_ on fans0_.fans_id=fan1_.id where fans0_.teams_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@794cb26b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ee56c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : firstName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : lastName
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : password
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : roles
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : username
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._User, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._Role.users].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._Role.users)
          - SQL table alias mapping - users0_
          - alias suffix - 0_
          - suffixed key columns - {roles_id2_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_6_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._Role.users: select users0_.roles_id as roles_id2_7_0_, users0_.users_id as users_id1_7_0_, user1_.id as id1_6_1_, user1_.version as version2_6_1_, user1_.firstName as firstnam3_6_1_, user1_.lastName as lastname4_6_1_, user1_.password as password5_6_1_, user1_.username as username6_6_1_ from users_roles users0_ inner join users user1_ on users0_.users_id=user1_.id where users0_.roles_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21abda60]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dd20ebc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : users
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : users
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain._Role, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain._User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain._User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {users_id1_7_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain._Role)
                - SQL table alias mapping - role1_
                - alias suffix - 1_
                - suffixed key columns - {id1_4_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain._User.roles: select roles0_.users_id as users_id1_7_0_, roles0_.roles_id as roles_id2_7_0_, role1_.id as id1_4_1_, role1_.version as version2_4_1_, role1_.name as name3_4_1_ from users_roles roles0_ inner join roles role1_ on roles0_.roles_id=role1_.id where roles0_.users_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69a73867]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749d7c01]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : fans
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : funds
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : name
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : owner
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : players
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f7cd50e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@401ec794]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : tot_employeer
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Team, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Fan.teams].<elements>.players.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Fan.teams)
          - SQL table alias mapping - teams0_
          - alias suffix - 0_
          - suffixed key columns - {fans_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_5_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Fan.teams: select teams0_.fans_id as fans_id1_2_0_, teams0_.teams_id as teams_id2_2_0_, team1_.id as id1_5_1_, team1_.version as version2_5_1_, team1_.funds as funds3_5_1_, team1_.name as name4_5_1_, team1_.owner as owner5_5_1_, team1_.tot_employeer as tot_empl6_5_1_ from fans_teams teams0_ inner join teams team1_ on teams0_.teams_id=team1_.id where teams0_.fans_id=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e1d8d41]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4809c771]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : version
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fans
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@277bc3a5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@214fba74]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : fullname
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : number
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : position
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : team
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : team
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
    - Returns
       - CollectionReturnImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players, querySpaceUid=<gen:0>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Player, querySpaceUid=<gen:1>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>)
             - CollectionAttributeFetchImpl(collection=it.jdk.hibernatespringthymelearfteam.domain.Player.fans, querySpaceUid=<gen:2>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans)
                - (collection element) CollectionFetchableElementEntityGraph(entity=it.jdk.hibernatespringthymelearfteam.domain.Fan, querySpaceUid=<gen:3>, path=[it.jdk.hibernatespringthymelearfteam.domain.Team.players].<elements>.fans.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=it.jdk.hibernatespringthymelearfteam.domain.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id6_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=it.jdk.hibernatespringthymelearfteam.domain.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection it.jdk.hibernatespringthymelearfteam.domain.Team.players: select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.SQL  - drop table fans if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[main] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[main] DEBUG org.hibernate.SQL  - drop table players if exists
[main] DEBUG org.hibernate.SQL  - drop table roles if exists
[main] DEBUG org.hibernate.SQL  - drop table teams if exists
[main] DEBUG org.hibernate.SQL  - drop table users if exists
[main] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[main] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[main] DEBUG org.hibernate.SQL  - create sequence hibernate_sequence start with 1 increment by 1
[main] DEBUG org.hibernate.SQL  - create table fans (id bigint not null, version integer not null, card_number varchar(20) not null, fullname varchar(20) not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table fans_players (fans_id bigint not null, players_id bigint not null, primary key (fans_id, players_id))
[main] DEBUG org.hibernate.SQL  - create table fans_teams (fans_id bigint not null, teams_id bigint not null, primary key (fans_id, teams_id))
[main] DEBUG org.hibernate.SQL  - create table players (id bigint not null, version integer not null, fullname varchar(255) not null, number varchar(255) not null, position char(255) not null, team_id bigint, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table roles (id bigint not null, version integer not null, name varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table teams (id bigint not null, version integer not null, funds bigint not null, name varchar(15) not null, owner varchar(255) not null, tot_employeer bigint not null, primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users (id bigint not null, version integer not null, firstName varchar(255), lastName varchar(255), password varchar(255), username varchar(255), primary key (id))
[main] DEBUG org.hibernate.SQL  - create table users_roles (users_id bigint not null, roles_id bigint not null)
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FK3ld5g1vqnfqsr7t8up54gsiup foreign key (players_id) references players
[main] DEBUG org.hibernate.SQL  - alter table fans_players add constraint FKevuwp2xqk6j3fpxa69xsbei9i foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKbq0idsc751ikxm4gr8te223am foreign key (teams_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table fans_teams add constraint FKn37je3huamewcyy0tw8v54sfn foreign key (fans_id) references fans
[main] DEBUG org.hibernate.SQL  - alter table players add constraint FK5nglidr00c4dyybl171v6kask foreign key (team_id) references teams
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKa62j07k5mhgifpp955h37ponj foreign key (roles_id) references roles
[main] DEBUG org.hibernate.SQL  - alter table users_roles add constraint FKml90kef4w2jy7oxyqv742tsfc foreign key (users_id) references users
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a72e2e8
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: ed3a2793-4779-49de-b6f8-e3cf8e17ecdf (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via user class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 1
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 2
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 3
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 4
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 5
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4], was: [<unreferenced>] (initialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 5 insertions, 0 updates, 0 deletions to 5 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=null, name=Lazio, funds=10000, id=1, version=0, fans=null, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._Role{name=ROLE_ADMIN, id=5, version=0, users=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=null}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain._User{firstName=alex, lastName=mariani, password=$2a$10$6ehmdL/JvQlKc27AV/9RN.t17o1KeAZGcp3zKKZIFjdaKRkbwMuhm, roles=[it.jdk.hibernatespringthymelearfteam.domain._Role#5], id=4, version=0, username=alex}
[main] DEBUG org.hibernate.SQL  - insert into teams (version, funds, name, owner, tot_employeer, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into players (version, fullname, number, position, team_id, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into users (version, firstName, lastName, password, username, id) values (?, ?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.SQL  - insert into roles (version, name, id) values (?, ?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Inserting collection: [it.jdk.hibernatespringthymelearfteam.domain._User.roles#4]
[main] DEBUG org.hibernate.SQL  - insert into users_roles (users_id, roles_id) values (?, ?)
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Done inserting collection: 1 rows inserted
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - call next value for hibernate_sequence
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 6
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - rolling back
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[main] DEBUG org.hibernate.validator.internal.engine.resolver.TraversableResolvers  - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[main] DEBUG org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator  - Loaded expression factory via original TCCL
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[main] DEBUG org.hibernate.validator.internal.engine.AbstractConfigurationImpl  - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - Trying to load META-INF/validation.xml for XML based Validator configuration.
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via TCCL
[main] DEBUG org.hibernate.validator.internal.xml.config.ResourceLoaderHelper  - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[main] DEBUG org.hibernate.validator.internal.xml.config.ValidationXmlParser  - No META-INF/validation.xml found. Using annotation based configuration only.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[main] DEBUG org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper  - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - it.jdk.hibernatespringthymelearfteam.business.impl.PlayerBOImpl@7f030c72
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@eabecf5
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Player'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Player (<no alias>) -> player0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} players player0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Player): [players]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Player)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [players player0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (players)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'player0_.id as id1_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}}
    |  \-[SQL_TOKEN] SqlFragment: 'player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[player0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'players player0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=players,tableAlias=player0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Player}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Player
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'From'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Fan'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Fan (<no alias>) -> fan0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} fans fan0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Fan): [fans]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Fan)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [fans fan0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (fans)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'fan0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}}
    |  \-[SQL_TOKEN] SqlFragment: 'fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_'
    \-[FROM] FromClause: 'From' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fan0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'fans fan0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=fans,tableAlias=fan0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Fan}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: From it.jdk.hibernatespringthymelearfteam.domain.Fan
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select fan0_.id as id1_0_, fan0_.version as version2_0_, fan0_.card_number as card_num3_0_, fan0_.fullname as fullname4_0_ from fans fan0_
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG it.jdk.hibernatespringthymelearfteam.controller.TeamController  - Team Home
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'FROM'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'it'
                |  |  |  \-[IDENT] Node: 'jdk'
                |  |  \-[IDENT] Node: 'hibernatespringthymelearfteam'
                |  \-[IDENT] Node: 'domain'
                \-[IDENT] Node: 'Team'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : it.jdk.hibernatespringthymelearfteam.domain.Team (<no alias>) -> team0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} teams team0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Team): [teams]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(it.jdk.hibernatespringthymelearfteam.domain.Team)
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [teams team0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teams)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'team0_.id as id1_5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}}
    |  \-[SQL_TOKEN] SqlFragment: 'team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[team0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'teams team0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=teams,tableAlias=team0_,origin=null,columns={,className=it.jdk.hibernatespringthymelearfteam.domain.Team}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: FROM it.jdk.hibernatespringthymelearfteam.domain.Team
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorTracker  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_, team0_.version as version2_5_, team0_.funds as funds3_5_, team0_.name as name4_5_, team0_.owner as owner5_5_, team0_.tot_employeer as tot_empl6_5_ from teams team0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select player0_.id as id1_3_, player0_.version as version2_3_, player0_.fullname as fullname3_3_, player0_.number as number4_3_, player0_.position as position5_3_, player0_.team_id as team_id6_3_ from players player0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Test Prova
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 10
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = A
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = null
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#3]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#2] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3], was: [it.jdk.hibernatespringthymelearfteam.domain.Player.fans#3] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.fans#1] (uninitialized)
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1], was: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Team{owner=Lotito, players=<uninitialized>, name=Lazio, funds=10000, id=1, version=0, fans=<uninitialized>, tot_employeer=100}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=13, id=2, fullname=Alex Mariani, position=D, team=it.jdk.hibernatespringthymelearfteam.domain.Team#1, version=0, fans=<uninitialized>}
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - it.jdk.hibernatespringthymelearfteam.domain.Player{number=10, id=3, fullname=Test Prova, position=A, team=null, version=0, fans=<uninitialized>}
[main] INFO  it.jdk.hibernatespringthymelearfteam.controller.TeamController  - [it.jdk.hibernatespringthymelearfteam.domain.Team@ac1893f3]
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Lookup: uid=ed3a2793-4779-49de-b6f8-e3cf8e17ecdf
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Loading collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.SQL  - select players0_.team_id as team_id6_3_0_, players0_.id as id1_3_0_, players0_.id as id1_3_1_, players0_.version as version2_3_1_, players0_.fullname as fullname3_3_1_, players0_.number as number4_3_1_, players0_.position as position5_3_1_, players0_.team_id as team_id6_3_1_ from players players0_ where players0_.team_id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Preparing collection initializer : [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.CollectionReferenceInitializerImpl  - Found row of collection: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fullname` : value = Alex Mariani
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fullname`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `number` : value = 13
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`number`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `position` : value = D
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`position`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `team` : value = 1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`team`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.SQL  - select team0_.id as id1_5_0_, team0_.version as version2_5_0_, team0_.funds as funds3_5_0_, team0_.name as name4_5_0_, team0_.owner as owner5_5_0_, team0_.tot_employeer as tot_empl6_5_0_ from teams team0_ where team0_.id=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving attributes for [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `version` : value = 0
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`version`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `fans` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`fans`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `funds` : value = 10000
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`funds`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `name` : value = Lazio
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`name`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `owner` : value = Lotito
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`owner`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `players` : value = NOT NULL COLLECTION
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`players`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Processing attribute `tot_employeer` : value = 100
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Attribute (`tot_employeer`)  - enhanced for lazy-loading? - false
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Team#1]
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : it.jdk.hibernatespringthymelearfteam.domain.Team#1
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [it.jdk.hibernatespringthymelearfteam.domain.Player#2]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections were found in result set for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - Collection fully initialized: [it.jdk.hibernatespringthymelearfteam.domain.Team.players#1]
[main] DEBUG org.hibernate.engine.loading.internal.CollectionLoadContext  - 1 collections initialized for role: it.jdk.hibernatespringthymelearfteam.domain.Team.players
[main] DEBUG org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer  - Done loading collection
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[SpringContextShutdownHook] DEBUG org.hibernate.internal.SessionFactoryImpl  - HHH000031: Closing
[SpringContextShutdownHook] INFO  org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl  - HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table fans_teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table players if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table teams if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop table users_roles if exists
[SpringContextShutdownHook] DEBUG org.hibernate.SQL  - drop sequence if exists hibernate_sequence
[SpringContextShutdownHook] DEBUG org.hibernate.type.spi.TypeConfiguration$Scope  - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@61214854] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6206b4a7]
[SpringContextShutdownHook] DEBUG org.hibernate.service.internal.AbstractServiceRegistryImpl  - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[SpringContextShutdownHook] DEBUG org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl  - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
